<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="9" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-07T17:21:44 ICT" name="Default suite" finished-at="2022-04-07T17:21:44 ICT" duration-ms="122">
    <groups>
    </groups>
    <test started-at="2022-04-07T17:21:44 ICT" name="Default test" finished-at="2022-04-07T17:21:44 ICT" duration-ms="122">
      <class name="com.PolyPro.entity.NhanVienTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="beforeClass" finished-at="2022-04-07T17:21:44 ICT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="beforeMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getHoTenTest()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="getHoTenTest" finished-at="2022-04-07T17:21:44 ICT" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHoTenTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="afterMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="beforeMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="getMaNVTest()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="getMaNVTest" finished-at="2022-04-07T17:21:44 ICT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMaNVTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="afterMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getMatKhauTest()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="getMatKhauTest" finished-at="2022-04-07T17:21:44 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMatKhauTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="beforeMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="afterMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="beforeMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isVaiTroTest()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="isVaiTroTest" finished-at="2022-04-07T17:21:44 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isVaiTroTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="afterMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="beforeMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="setHoTenTest()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="setHoTenTest" finished-at="2022-04-07T17:21:44 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setHoTenTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="afterMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="beforeMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="setMaNVTest()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="setMaNVTest" finished-at="2022-04-07T17:21:44 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setMaNVTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="afterMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="beforeMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="setMatKhauTest()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="setMatKhauTest" finished-at="2022-04-07T17:21:44 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setMatKhauTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="afterMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="beforeMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="setVaiTroTest()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="setVaiTroTest" finished-at="2022-04-07T17:21:44 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setVaiTroTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="afterMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="beforeMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="toStringTest()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="toStringTest" finished-at="2022-04-07T17:21:44 ICT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toStringTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="afterMethod" finished-at="2022-04-07T17:21:44 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.PolyPro.entity.NhanVienTest@654f0d9c]" started-at="2022-04-07T17:21:44 ICT" name="afterClass" finished-at="2022-04-07T17:21:44 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.PolyPro.entity.NhanVienTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
