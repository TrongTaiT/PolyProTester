/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.PolyPro.frame;

import com.PolyPro.DAO.ChuyenDeDAO;
import com.PolyPro.DAO.HocVienDAO;
import com.PolyPro.DAO.KhoaHocDAO;
import com.PolyPro.DAO.NguoiHocDAO;
import com.PolyPro.entity.ChuyenDe;
import com.PolyPro.entity.HocVien;
import com.PolyPro.entity.KhoaHoc;
import com.PolyPro.entity.NguoiHoc;
import com.PolyPro.entity.NhanVien;
import com.PolyPro.helper.DateHelper;
import com.PolyPro.helper.DesignHelper;
import com.PolyPro.helper.DialogHelper;
import com.PolyPro.helper.ShareHelper;
import com.PolyPro.helper.jdbcHelper;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author NguyenTruongChinh
 */
public class HocVienJFrame extends javax.swing.JFrame {

    DefaultTableModel model;

    /**
     * Creates new form HocVienJFrame
     */
    public HocVienJFrame() {
        initComponents();
        init();
        setTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgr_classify = new javax.swing.ButtonGroup();
        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        pnl_chuyenDe = new javax.swing.JPanel();
        cbo_chuyenDe = new javax.swing.JComboBox<>();
        pnl_khoaHoc = new javax.swing.JPanel();
        cbo_khoaHoc = new javax.swing.JComboBox<>();
        tabs = new javax.swing.JTabbedPane();
        pnl_HVKH = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_hocVien = new javax.swing.JTable();
        rdo_all = new javax.swing.JRadioButton();
        rdo_scoreEntered = new javax.swing.JRadioButton();
        rdo_scoreNotEntered = new javax.swing.JRadioButton();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_outPutExcel = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txt_find = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_nguoiHoc = new javax.swing.JTable();
        btn_add = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        kGradientPanel1.setkBorderRadius(0);
        kGradientPanel1.setkEndColor(new java.awt.Color(0, 204, 51));
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 51, 255));
        kGradientPanel1.setkTransparentControls(false);

        pnl_chuyenDe.setBackground(new java.awt.Color(204, 204, 255));
        pnl_chuyenDe.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "   CHUYÊN ĐỀ   ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        cbo_chuyenDe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cbo_chuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_chuyenDeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_chuyenDeLayout = new javax.swing.GroupLayout(pnl_chuyenDe);
        pnl_chuyenDe.setLayout(pnl_chuyenDeLayout);
        pnl_chuyenDeLayout.setHorizontalGroup(
            pnl_chuyenDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_chuyenDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbo_chuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        pnl_chuyenDeLayout.setVerticalGroup(
            pnl_chuyenDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_chuyenDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbo_chuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_khoaHoc.setBackground(new java.awt.Color(204, 204, 255));
        pnl_khoaHoc.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "   KHÓA HỌC   ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        cbo_khoaHoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cbo_khoaHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_khoaHocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_khoaHocLayout = new javax.swing.GroupLayout(pnl_khoaHoc);
        pnl_khoaHoc.setLayout(pnl_khoaHocLayout);
        pnl_khoaHocLayout.setHorizontalGroup(
            pnl_khoaHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_khoaHocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbo_khoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        pnl_khoaHocLayout.setVerticalGroup(
            pnl_khoaHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_khoaHocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbo_khoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        pnl_HVKH.setBackground(new java.awt.Color(204, 204, 255));

        tbl_hocVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MÃ HV", "MÃ NH", "HỌ VÀ TÊN", "ĐIỂM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_hocVien);

        rdo_all.setBackground(new java.awt.Color(204, 204, 255));
        bgr_classify.add(rdo_all);
        rdo_all.setSelected(true);
        rdo_all.setText("Tất cả");
        rdo_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo_allActionPerformed(evt);
            }
        });

        rdo_scoreEntered.setBackground(new java.awt.Color(204, 204, 255));
        bgr_classify.add(rdo_scoreEntered);
        rdo_scoreEntered.setText("Đã nhập điểm");
        rdo_scoreEntered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo_scoreEnteredActionPerformed(evt);
            }
        });

        rdo_scoreNotEntered.setBackground(new java.awt.Color(204, 204, 255));
        bgr_classify.add(rdo_scoreNotEntered);
        rdo_scoreNotEntered.setText("Chưa nhập điểm");
        rdo_scoreNotEntered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo_scoreNotEnteredActionPerformed(evt);
            }
        });

        btn_update.setBackground(new java.awt.Color(0, 255, 0));
        btn_update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_update.setText("CẬP NHẬT");
        btn_update.setPreferredSize(new java.awt.Dimension(107, 38));
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_delete.setBackground(new java.awt.Color(255, 0, 0));
        btn_delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_delete.setText("XÓA KHỎI KHÓA HỌC");
        btn_delete.setPreferredSize(new java.awt.Dimension(189, 38));
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_outPutExcel.setBackground(new java.awt.Color(255, 255, 0));
        btn_outPutExcel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_outPutExcel.setText("XUẤT EXCEL");
        btn_outPutExcel.setPreferredSize(new java.awt.Dimension(71, 38));
        btn_outPutExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_outPutExcelActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 102, 204));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("GỬI ĐIỂM ");
        jButton3.setPreferredSize(new java.awt.Dimension(107, 38));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_HVKHLayout = new javax.swing.GroupLayout(pnl_HVKH);
        pnl_HVKH.setLayout(pnl_HVKHLayout);
        pnl_HVKHLayout.setHorizontalGroup(
            pnl_HVKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE)
            .addGroup(pnl_HVKHLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_HVKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_HVKHLayout.createSequentialGroup()
                        .addComponent(rdo_all)
                        .addGap(18, 18, 18)
                        .addComponent(rdo_scoreEntered)
                        .addGap(18, 18, 18)
                        .addComponent(rdo_scoreNotEntered)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnl_HVKHLayout.createSequentialGroup()
                        .addComponent(btn_outPutExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnl_HVKHLayout.setVerticalGroup(
            pnl_HVKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_HVKHLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_HVKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdo_all)
                    .addComponent(rdo_scoreEntered)
                    .addComponent(rdo_scoreNotEntered))
                .addGroup(pnl_HVKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_HVKHLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnl_HVKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_outPutExcel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnl_HVKHLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(pnl_HVKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("HỌC VIÊN", pnl_HVKH);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "     TÌM KIẾM     ", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(634, 60));

        txt_find.setPreferredSize(new java.awt.Dimension(6, 40));
        txt_find.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txt_findCaretUpdate(evt);
            }
        });
        txt_find.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_findFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_findFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(txt_find, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(txt_find, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        tbl_nguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbl_nguoiHoc);

        btn_add.setBackground(new java.awt.Color(0, 204, 51));
        btn_add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_add.setText("THÊM VÀO KHÓA HỌC");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                .addGap(11, 11, 11))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_add)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_add)
                .addContainerGap())
        );

        tabs.addTab("NGƯỜI HỌC", jPanel1);

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(pnl_chuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnl_khoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnl_khoaHoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnl_chuyenDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(tabs)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbo_chuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_chuyenDeActionPerformed
        // TODO add your handling code here:
        fillToComboBoxKhoaHoc();
    }//GEN-LAST:event_cbo_chuyenDeActionPerformed

    private void cbo_khoaHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_khoaHocActionPerformed
        // TODO add your handling code here:
        fillToTableHocVien();
    }//GEN-LAST:event_cbo_khoaHocActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        this.addHocVien();
    }//GEN-LAST:event_btn_addActionPerformed

    private void txt_findFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_findFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_findFocusLost

    private void txt_findFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_findFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_findFocusGained

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        this.deleteHocVien();
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:
        this.updateDiem();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_outPutExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_outPutExcelActionPerformed
        // TODO add your handling code here:
        this.outPutExcel();
    }//GEN-LAST:event_btn_outPutExcelActionPerformed

    private void rdo_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo_allActionPerformed
        // TODO add your handling code here:
        this.fillToTableHocVien();
    }//GEN-LAST:event_rdo_allActionPerformed

    private void rdo_scoreEnteredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo_scoreEnteredActionPerformed
        // TODO add your handling code here:
        this.fillToTableHocVien();
    }//GEN-LAST:event_rdo_scoreEnteredActionPerformed

    private void rdo_scoreNotEnteredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo_scoreNotEnteredActionPerformed
        // TODO add your handling code here:
        this.fillToTableHocVien();
    }//GEN-LAST:event_rdo_scoreNotEnteredActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
            guiMail();
        } catch (MessagingException ex) {
            Logger.getLogger(HocVienJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(HocVienJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txt_findCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txt_findCaretUpdate
        // TODO add your handling code here:
        this.find();
    }//GEN-LAST:event_txt_findCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HocVienJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HocVienJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HocVienJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HocVienJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HocVienJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgr_classify;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_outPutExcel;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> cbo_chuyenDe;
    private javax.swing.JComboBox<String> cbo_khoaHoc;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private javax.swing.JPanel pnl_HVKH;
    private javax.swing.JPanel pnl_chuyenDe;
    private javax.swing.JPanel pnl_khoaHoc;
    private javax.swing.JRadioButton rdo_all;
    private javax.swing.JRadioButton rdo_scoreEntered;
    private javax.swing.JRadioButton rdo_scoreNotEntered;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tbl_hocVien;
    private javax.swing.JTable tbl_nguoiHoc;
    private javax.swing.JTextField txt_find;
    // End of variables declaration//GEN-END:variables

    public void init() {
        setLocationRelativeTo(null);
        setTable();
        this.fillToComboBoxChuyenDe();
    }

    ChuyenDeDAO cddao = new ChuyenDeDAO();
    KhoaHocDAO khdao = new KhoaHocDAO();
    HocVienDAO hvdao = new HocVienDAO();
    NguoiHocDAO nhdao = new NguoiHocDAO();

    public void setTable() {
        tbl_hocVien.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        tbl_hocVien.getTableHeader().setBackground(new Color(255, 102, 0));
        tbl_hocVien.getTableHeader().setForeground(new Color(255, 255, 255));
        tbl_hocVien.setSelectionBackground(new Color(51, 102, 255));
        tbl_hocVien.setSelectionForeground(new Color(255, 255, 255));
        tbl_hocVien.setRowHeight(25);
        tbl_hocVien.setGridColor(new Color(255, 255, 255));

        DefaultTableModel modelHV = new DefaultTableModel();
        modelHV.addColumn("STT");
        modelHV.addColumn("MÃ HV");
        modelHV.addColumn("MÃ NH");
        modelHV.addColumn("HỌ TÊN");
        modelHV.addColumn("ĐIỂM");
        tbl_hocVien.setModel(modelHV);

        DefaultTableModel modelNH = new DefaultTableModel();
        modelNH.addColumn("MÃ NH");
        modelNH.addColumn("HỌ VÀ TÊN");
        modelNH.addColumn("GIỚI TÍNH");
        modelNH.addColumn("NGÀY SINH");
        modelNH.addColumn("ĐIỆN THOẠI");
        modelNH.addColumn("EMAIL");
        tbl_nguoiHoc.setModel(modelNH);

        DesignHelper.setTable(tbl_hocVien);
        DesignHelper.setTable(tbl_nguoiHoc);

    }

    void fillToComboBoxChuyenDe() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbo_chuyenDe.getModel();
        model.removeAllElements();
        List<ChuyenDe> list = cddao.selectAll();
        for (ChuyenDe cd : list) {
            model.addElement(cd);
        }
        this.fillToComboBoxKhoaHoc();
    }

    void fillToComboBoxKhoaHoc() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbo_khoaHoc.getModel();
        model.removeAllElements();
        ChuyenDe cd = (ChuyenDe) cbo_chuyenDe.getSelectedItem();
        if (cd != null) {
            List<KhoaHoc> list = khdao.selectByChuyenDe(cd.getMaCD());
            for (KhoaHoc kh : list) {
                model.addElement(kh);
            }
            this.fillToTableHocVien();
        }
    }

    void fillToTableHocVien() {
        DefaultTableModel model = (DefaultTableModel) tbl_hocVien.getModel();
        model.setRowCount(0);
        KhoaHoc kh = (KhoaHoc) cbo_khoaHoc.getSelectedItem();
        if (kh != null) {
            List<HocVien> list = hvdao.selectByKhoaHoc(kh.getMaKH());
            for (int i = 0; i < list.size(); i++) {
                HocVien hv = list.get(i);
                String hoTen = nhdao.selectById(hv.getMaNH()).getHoTen();
                double diem = hvdao.selectById(String.valueOf(hv.getMaHV())).getDiem();
                if (rdo_all.isSelected()) {
                    model.addRow(new Object[]{
                        i + 1,
                        hv.getMaHV(),
                        hv.getMaNH(),
                        hoTen,
                        hv.getDiem()});
                } else if (rdo_scoreEntered.isSelected() && diem >= 0) {
                    model.addRow(new Object[]{
                        i + 1,
                        hv.getMaHV(),
                        hv.getMaNH(),
                        hoTen,
                        hv.getDiem()});
                } else if (rdo_scoreNotEntered.isSelected() && diem < 0) {
                    model.addRow(new Object[]{
                        i + 1,
                        hv.getMaHV(),
                        hv.getMaNH(),
                        hoTen,
                        hv.getDiem()});
                }
            }
            this.fillToTableNguoiHoc();
        }
    }

    void fillToTableNguoiHoc() {
        DefaultTableModel model = (DefaultTableModel) tbl_nguoiHoc.getModel();
        model.setRowCount(0);
        KhoaHoc kh = (KhoaHoc) cbo_khoaHoc.getSelectedItem();
        String keyword = txt_find.getText();
        List<NguoiHoc> list = nhdao.selectNotInCourse(kh.getMaKH(), keyword);
        for (NguoiHoc nh : list) {
            model.addRow(new Object[]{
                nh.getMaNH(),
                nh.getHoTen(),
                nh.isGioiTinh() ? "Nam" : "Nữ",
                nh.getNgaySinh(),
                nh.getDienThoai(),
                nh.getEmail()});
        }
    }

    void addHocVien() {
        KhoaHoc kh = (KhoaHoc) cbo_khoaHoc.getSelectedItem();
        for (int row : tbl_nguoiHoc.getSelectedRows()) {
            HocVien hv = new HocVien();
            hv.setMaKH(kh.getMaKH());
            hv.setDiem(-1);
            hv.setMaNH((String) tbl_nguoiHoc.getValueAt(row, 0));
            hvdao.insert(hv);
        }
        this.fillToTableHocVien();
        this.tabs.setSelectedIndex(0);
    }

    void deleteHocVien() {
        if (!ShareHelper.isMangager()) {
            DialogHelper.alert(this, "Bạn không có quyền xóa học viên!");
        } else {
            if (DialogHelper.confirm(this, "Bạn có muốn xóa các học viên được chọn?")) {
                for (int row : tbl_hocVien.getSelectedRows()) {
                    int maHV = (Integer) tbl_hocVien.getValueAt(row, 0);
                    hvdao.delete(String.valueOf(maHV));
                }
                this.fillToTableHocVien();
            }
        }
    }

    void updateDiem() {
        for (int i = 0; i < tbl_hocVien.getRowCount(); i++) {
            Integer maHV = (Integer) tbl_hocVien.getValueAt(i, 1);
            HocVien hv = hvdao.selectById(String.valueOf(maHV));
            hv.setDiem(Double.parseDouble(tbl_hocVien.getValueAt(i, 4).toString()));
            hvdao.update(hv);
        }
        DialogHelper.alert(this, "Cập nhật điểm thành công!");
    }

    void outPutExcel() {
        TableModel model = tbl_hocVien.getModel();
        JFileChooser excelExportChooser = new JFileChooser();
        excelExportChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        excelExportChooser.setDialogTitle("Save Excel File");
        //filter the file
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "*.xls", "xls", "xlsx", "xlsn");
        excelExportChooser.addChoosableFileFilter(filter);
        excelExportChooser.setFileFilter(filter);
        int excelchooser = excelExportChooser.showSaveDialog(null);
        if (excelchooser == JFileChooser.APPROVE_OPTION) {
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("SalesReturnsDetails");
            XSSFRow row;
            XSSFCell cell;
            try {
                // write the column headers
                row = sheet.createRow(0);
                for (int j = 0; j < model.getColumnCount(); j++) {
                    cell = row.createCell(j);
                    cell.setCellValue(model.getColumnName(j));
                }
                for (int i = 0; i < model.getRowCount(); i++) {
                    row = sheet.createRow(i + 1);
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        cell = row.createCell(j);
                        cell.setCellValue(model.getValueAt(i, j).toString());
                    }
                }
            } catch (Exception e) {
                //JOptionPane.showMessageDialog(null, "xuất file thành công");
            }
            FileOutputStream excelFIS;
            try {
                excelFIS = new FileOutputStream(excelExportChooser.getSelectedFile() + ".xlsx");
                workbook.write(excelFIS);
                workbook.close();
                DialogHelper.alert(this, "Xuât File thành công!");
            } catch (FileNotFoundException ex) {
                System.out.println(ex);
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }

    void find() {
        this.fillToTableNguoiHoc();
    }

    void guiMail() throws MessagingException, UnsupportedEncodingException {

        KhoaHoc kh = (KhoaHoc) cbo_khoaHoc.getSelectedItem();
        ChuyenDe cd = (ChuyenDe) cbo_chuyenDe.getSelectedItem();
        List<HocVien> listHV = hvdao.selectByKhoaHoc(kh.getMaKH());
        List<NguoiHoc> listNH = nhdao.selectInCourse(kh.getMaKH());
        List<ChuyenDe> listCD = cddao.selectInCourse(cd.getMaCD());

        try {
            Properties p = new Properties();
            p.put("mail.smtp.auth", "true");
            p.put("mail.smtp.starttls.enable", "true");
            p.put("mail.smtp.host", "smtp.gmail.com");
            p.put("mail.smtp.port", 587);
            final String from = "chinhnguyen010801@gmail.com";
            final String password = "mdktkskgkm1";
            Session s = Session.getInstance(p, new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(from, password);
                }
            });

            MimeMessage msg = new MimeMessage(s);
            InternetAddress sender = new InternetAddress(from, from, "utf-8");
            msg.setFrom(sender);
            msg.setReplyTo(new InternetAddress[]{sender});
            String name = "";
            for (int i = 0; i < listNH.size(); i++) {
                HocVien hv = (HocVien) hvdao.selectByMaKH_MaNH(kh.getMaKH(), listNH.get(i).getMaNH());
                if (hv.getDiem() > -1) {
                    String ccEmails = listNH.get(i).getEmail();
                    name += " \n " + listNH.get(i).getHoTen();
                    System.out.println(ccEmails);
                    if (!ccEmails.equals("")) {
                        msg.setRecipients(Message.RecipientType.CC, InternetAddress.parse(ccEmails));
                    }
                    String subject = "Cập nhật điểm khóa học " + kh.getMaKH() + " / Mã người học: " + listNH.get(i).getMaNH();
                    System.out.println(hv.getMaHV());
                    String about = "<p>Mã học viên: " + hv.getMaHV() + "</p>";
                    String learner = "<p> Họ và tên: " + listNH.get(i).getHoTen() + "</p>";
                    String topicName = "<p>Chuyên đề: " + cd.getTenCD() + "</p>";
                    String point = "<p>Điểm: " + hv.getDiem() + "<p>";

                    MimeBodyPart textPart = new MimeBodyPart();
                    textPart.setContent(about + " - " + learner + " - " + topicName + " - " + point, "text/html; charset=utf-8");
                    Multipart mp = new MimeMultipart();
                    msg.setSubject(subject + " / " + DateHelper.now());
                    mp.addBodyPart(textPart);
                    msg.setContent(mp);
                    Transport.send(msg);
                }
            }
            DialogHelper.alert(this, "Mail đã gửi đi cho học viên " + name + "\n");
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Lỗi rồi" + e);
        }
    }

}
