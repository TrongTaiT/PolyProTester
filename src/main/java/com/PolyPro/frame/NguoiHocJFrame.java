/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.PolyPro.frame;

import com.PolyPro.DAO.NguoiHocDAO;
import com.PolyPro.entity.NguoiHoc;
import com.PolyPro.helper.DateHelper;
import com.PolyPro.helper.DesignHelper;
import com.PolyPro.helper.DialogHelper;
import com.PolyPro.helper.ShareHelper;
import com.PolyPro.helper.ValidateHelper;
import java.awt.Color;
import java.awt.Font;
import java.sql.*;
import java.util.Date;
import java.util.List;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NguyenTruongChinh
 */
public class NguoiHocJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NguoiHocJFrame
     */
    public NguoiHocJFrame() {
        initComponents();
        init();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txt_idNH = new javax.swing.JTextField();
        txt_name = new javax.swing.JTextField();
        cbo_sex = new javax.swing.JComboBox<>();
        txt_birthday = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_note = new javax.swing.JTextArea();
        btn_add = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_new = new javax.swing.JButton();
        btn_first = new javax.swing.JButton();
        btn_prev = new javax.swing.JButton();
        btn_last = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        txt_phone = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txt_find = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_list = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        kGradientPanel1.setkBorderRadius(0);
        kGradientPanel1.setkEndColor(new java.awt.Color(0, 204, 51));
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 51, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("QUẢN LÝ NGƯỜI HỌC");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        txt_idNH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_idNHFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_idNHFocusLost(evt);
            }
        });

        txt_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_nameFocusLost(evt);
            }
        });

        cbo_sex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Giới tính", "Nam", "Nữ" }));

        txt_birthday.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_birthdayFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_birthdayFocusLost(evt);
            }
        });

        txt_email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_emailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_emailFocusLost(evt);
            }
        });

        txt_note.setColumns(20);
        txt_note.setRows(5);
        txt_note.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_noteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_noteFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(txt_note);

        btn_add.setBackground(new java.awt.Color(0, 255, 0));
        btn_add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/PolyPro/icons/Add.png"))); // NOI18N
        btn_add.setText("THÊM");
        btn_add.setMargin(new java.awt.Insets(5, 5, 5, 5));
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_edit.setBackground(new java.awt.Color(255, 255, 0));
        btn_edit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/PolyPro/icons/Edit.png"))); // NOI18N
        btn_edit.setText("SỬA");
        btn_edit.setMargin(new java.awt.Insets(5, 5, 5, 5));
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_delete.setBackground(new java.awt.Color(255, 0, 0));
        btn_delete.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/PolyPro/icons/Delete.png"))); // NOI18N
        btn_delete.setText("XÓA");
        btn_delete.setMargin(new java.awt.Insets(5, 5, 5, 5));
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_new.setBackground(new java.awt.Color(0, 204, 204));
        btn_new.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_new.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/PolyPro/icons/refresh-icon.png"))); // NOI18N
        btn_new.setText("MỚI");
        btn_new.setMargin(new java.awt.Insets(5, 5, 5, 5));
        btn_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newActionPerformed(evt);
            }
        });

        btn_first.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_first.setText("|<");
        btn_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_firstActionPerformed(evt);
            }
        });

        btn_prev.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_prev.setText("<<");
        btn_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prevActionPerformed(evt);
            }
        });

        btn_last.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_last.setText(">|");
        btn_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lastActionPerformed(evt);
            }
        });

        btn_next.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_next.setText(">>");
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        txt_phone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_phoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_phoneFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_new, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(btn_first)
                        .addGap(18, 18, 18)
                        .addComponent(btn_prev)
                        .addGap(18, 18, 18)
                        .addComponent(btn_next)
                        .addGap(18, 18, 18)
                        .addComponent(btn_last)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cbo_sex, 0, 350, Short.MAX_VALUE)
                            .addComponent(txt_idNH)
                            .addComponent(txt_phone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_email, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                                .addComponent(txt_birthday))
                            .addComponent(txt_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_idNH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbo_sex, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_birthday, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_new, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_first)
                    .addComponent(btn_prev)
                    .addComponent(btn_next)
                    .addComponent(btn_last))
                .addGap(23, 23, 23))
        );

        tabs.addTab("CẬP NHẬT", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "     TÌM KIẾM     ", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        txt_find.setBackground(new java.awt.Color(204, 204, 255));
        txt_find.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_find.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_find.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txt_findCaretUpdate(evt);
            }
        });
        txt_find.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_findFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_findFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_find, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(txt_find, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbl_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_list.setGridColor(new java.awt.Color(255, 255, 255));
        tbl_list.setSelectionBackground(new java.awt.Color(51, 102, 255));
        tbl_list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbl_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_listMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_list);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
        );

        tabs.addTab("DANH SÁCH", jPanel2);

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(tabs)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_idNHFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_idNHFocusGained
        // TODO add your handling code here:
        if(txt_idNH.getText().equals(" Mã người học")){
            txt_idNH.setText("");
            txt_idNH.requestFocus();
            DesignHelper.deleteTextField(txt_idNH);
        }
    }//GEN-LAST:event_txt_idNHFocusGained

    private void txt_idNHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_idNHFocusLost
        // TODO add your handling code here:
        if(txt_idNH.getText().length() == 0){
            DesignHelper.addTextField(txt_idNH);
            txt_idNH.setText(" Mã người học");
            txt_idNH.setSize(350, 35);
        }
    }//GEN-LAST:event_txt_idNHFocusLost

    private void txt_findFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_findFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_findFocusGained

    private void txt_findFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_findFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_findFocusLost

    private void txt_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nameFocusGained
        // TODO add your handling code here:
        if(txt_name.getText().equals(" Họ và tên")){
            txt_name.setText("");
            txt_name.requestFocus();
            DesignHelper.deleteTextField(txt_name);
        }
    }//GEN-LAST:event_txt_nameFocusGained

    private void txt_nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nameFocusLost
        // TODO add your handling code here:
        if(txt_name.getText().length() == 0){
            txt_name.setText(" Họ và tên");
            DesignHelper.addTextField(txt_name);
            txt_name.setSize(350, 35);
        }
    }//GEN-LAST:event_txt_nameFocusLost

    private void txt_birthdayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_birthdayFocusGained
        // TODO add your handling code here:
        if(txt_birthday.getText().equals(" Ngày sinh (dd/MM/yyyy)")){
            txt_birthday.setText("");
            txt_birthday.requestFocus();
            DesignHelper.deleteTextField(txt_birthday);
        }
    }//GEN-LAST:event_txt_birthdayFocusGained

    private void txt_birthdayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_birthdayFocusLost
        // TODO add your handling code here:
        if(txt_birthday.getText().length() == 0){
            txt_birthday.setText(" Ngày sinh (dd/MM/yyyy)");
            DesignHelper.addTextField(txt_birthday);
            txt_birthday.setSize(350, 35);
        }
    }//GEN-LAST:event_txt_birthdayFocusLost

    private void txt_emailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_emailFocusGained
        // TODO add your handling code here:
        if(txt_email.getText().equals(" Email")){
            txt_email.setText("");
            txt_email.requestFocus();
            DesignHelper.deleteTextField(txt_email);
        }
    }//GEN-LAST:event_txt_emailFocusGained

    private void txt_emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_emailFocusLost
        // TODO add your handling code here:
        if(txt_email.getText().length() == 0){
            txt_email.setText(" Email");
            DesignHelper.addTextField(txt_email);
            txt_email.setSize(350, 35);
        }
    }//GEN-LAST:event_txt_emailFocusLost

    private void txt_noteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_noteFocusGained
        // TODO add your handling code here:
        if(txt_note.getText().equals(" Ghi chú")){
            txt_note.setText("");
            txt_note.requestFocus();
            DesignHelper.deleteTextArea(txt_note);
        }
    }//GEN-LAST:event_txt_noteFocusGained

    private void txt_noteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_noteFocusLost
        // TODO add your handling code here:
        if(txt_note.getText().length() == 0){
            txt_note.setText(" Ghi chú");
            txt_note.setSize(755, 50);
            DesignHelper.addTextArea(txt_note);
        }
    }//GEN-LAST:event_txt_noteFocusLost

    private void txt_phoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_phoneFocusGained
        // TODO add your handling code here:
        if(txt_phone.getText().equals(" Số điện thoại")){
            txt_phone.setText("");
            txt_phone.requestFocus();
            DesignHelper.deleteTextField(txt_phone);
        }
    }//GEN-LAST:event_txt_phoneFocusGained

    private void txt_phoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_phoneFocusLost
        // TODO add your handling code here:
        if(txt_phone.getText().length() == 0){
            txt_phone.setText(" Số điện thoại");
            DesignHelper.addTextField(txt_phone);
            txt_phone.setSize(350, 35);
        }
    }//GEN-LAST:event_txt_phoneFocusLost

    private void btn_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newActionPerformed
        // TODO add your handling code here:
        this.clear();
    }//GEN-LAST:event_btn_newActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        if(isValidate()){
            this.insert();
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void tbl_listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_listMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2){
            this.row = tbl_list.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tbl_listMouseClicked

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        // TODO add your handling code here:
        this.update();
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void txt_findCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txt_findCaretUpdate
        // TODO add your handling code here:
        this.find();
    }//GEN-LAST:event_txt_findCaretUpdate

    private void btn_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_firstActionPerformed
        // TODO add your handling code here:
        this.first();
    }//GEN-LAST:event_btn_firstActionPerformed

    private void btn_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prevActionPerformed
        // TODO add your handling code here:
        this.prev();
    }//GEN-LAST:event_btn_prevActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        // TODO add your handling code here:
        this.next();
    }//GEN-LAST:event_btn_nextActionPerformed

    private void btn_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lastActionPerformed
        // TODO add your handling code here:
        this.last();
    }//GEN-LAST:event_btn_lastActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NguoiHocJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_first;
    private javax.swing.JButton btn_last;
    private javax.swing.JButton btn_new;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_prev;
    private javax.swing.JComboBox<String> cbo_sex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tbl_list;
    private javax.swing.JTextField txt_birthday;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_find;
    private javax.swing.JTextField txt_idNH;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextArea txt_note;
    private javax.swing.JTextField txt_phone;
    // End of variables declaration//GEN-END:variables

    
    public void init(){
        setLocationRelativeTo(null);
        setText();
        addTitleTable();
        this.row = -1;
        this.fillToTable();
        this.updateStatus();
    }
    
    public void setText(){
        txt_idNH.setText(" Mã người học");
        txt_name.setText(" Họ và tên");
        cbo_sex.setSelectedIndex(0);
        txt_birthday.setText(" Ngày sinh (dd/MM/yyyy)");
        txt_phone.setText(" Số điện thoại");
        txt_email.setText(" Email");
        txt_note.setText(" Ghi chú");
        DesignHelper.addTextField(txt_idNH);
        DesignHelper.addTextField(txt_name);
        DesignHelper.addTextField(txt_birthday);
        DesignHelper.addTextField(txt_phone);
        DesignHelper.addTextField(txt_email);
        DesignHelper.addTextArea(txt_note);
        txt_idNH.setSize(350, 35);
        txt_name.setSize(350, 35);
        txt_birthday.setSize(350, 35);
        txt_email.setSize(350, 35);
        txt_phone.setSize(350, 35);
    }
    
    public void setPlaceHolder(){
        DesignHelper.deleteTextField(txt_idNH);
       DesignHelper.deleteTextField(txt_name);
        DesignHelper.deleteTextField(txt_birthday);
        DesignHelper.deleteTextField(txt_phone);
        DesignHelper.deleteTextField(txt_email);
       DesignHelper.deleteTextArea(txt_note);
    }
    
    DefaultTableModel model;
    public void addTitleTable(){
        model = new DefaultTableModel();
        model.addColumn("Mã NH");
        model.addColumn("Họ và tên");
        model.addColumn("Giới tính");
        model.addColumn("Ngày sinh");
        model.addColumn("Điện thoại");
        model.addColumn("Email");
        model.addColumn("Mã NV");
        model.addColumn("Ngày ĐK");
        tbl_list.setModel(model);
        
        tbl_list.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        tbl_list.getTableHeader().setForeground(Color.WHITE);
        tbl_list.getTableHeader().setBackground(new Color(255,102,0));
        tbl_list.setSelectionForeground(Color.WHITE);
        tbl_list.setRowHeight(25);
    } 
    

        /* Thực hiện viết mã cho các chức năng */
    // Khai báo 
    NguoiHocDAO dao = new NguoiHocDAO(); // làm việc với bảng NGUOIHOC
    int row = -1; // Hàng được chọn trên table

    public void fillToTable(){
        DefaultTableModel model = (DefaultTableModel) tbl_list.getModel();
        model.setRowCount(0);
        try {
            String keyword = txt_find.getText();
            List<NguoiHoc> list = dao.selectByKeyword(keyword);
            for(NguoiHoc nh : list){
                model.addRow(new Object[]{
                    nh.getMaNH(), 
                    nh.getHoTen(),
                    nh.isGioiTinh()?"Nam":"Nữ",
                    DateHelper.toString(nh.getNgaySinh(), "dd/MM/yyyy"),
                    nh.getDienThoai(), 
                    nh.getEmail(),
                    nh.getMaNV(), 
                    DateHelper.toString(nh.getNgayDK(), "dd/MM/yyyy")}); // thêm 1 hàng vào table
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu! \n" +e );
        }
    }
    
    public void clear(){
        NguoiHoc nh = new NguoiHoc();
        setText();
        setBackgroundDefault();
        this.row = -1;
        updateStatus();
    }
    
    public void setForm(NguoiHoc nh){
        txt_idNH.setText(nh.getMaNH());
        txt_name.setText(nh.getHoTen());
        cbo_sex.setSelectedIndex(nh.isGioiTinh()? 1 : 2);
        txt_birthday.setText(DateHelper.toString(nh.getNgaySinh(), "dd/MM/yyyy"));
        txt_phone.setText(nh.getDienThoai());
        txt_email.setText(nh.getEmail());
        txt_note.setText(nh.getGhiChu());
    }
    
    public NguoiHoc getForm(){
        NguoiHoc nh = new NguoiHoc();
        nh.setMaNH(txt_idNH.getText());
        nh.setHoTen(txt_name.getText());
        if(cbo_sex.getSelectedIndex() == 1){
            nh.setGioiTinh(true);
        }
        if(cbo_sex.getSelectedIndex() == 2){
            nh.setGioiTinh(false);
        }
        nh.setNgaySinh(DateHelper.toDate(txt_birthday.getText(), "dd/MM/yyyy"));
        nh.setDienThoai(txt_phone.getText());
        nh.setEmail(txt_email.getText());
        nh.setGhiChu(txt_note.getText());
        nh.setMaNV(ShareHelper.user.getMaNV());
        Date now = new Date();
        nh.setNgayDK(DateHelper.now());
        return nh;
    }
    
    public void insert(){
        NguoiHoc nh = getForm();
        try {
            dao.insert(nh);
            this.fillToTable();
            this.clear();
            DialogHelper.alert(this, "Thêm mới thành công!");
        } catch (Exception e) {
            DialogHelper.alert(this, "Thêm mới thất bại!");
        }
    }
    
    public void update(){
        NguoiHoc nh = getForm();
        try {
            dao.update(nh);
            this.fillToTable();
            DialogHelper.alert(this, "Cập nhật thành công!");
        } catch (Exception e) {
            DialogHelper.alert(this, "Cập nhật thất bại!" + e);
        }
    }
    
    public void delete(){
        if(DialogHelper.confirm(this, "Bạn có thật sự muốn xóa người học này?")){
            try {
                String id = txt_idNH.getText();
                dao.delete(id);
                this.fillToTable();
                this.clear();
                DialogHelper.alert(this, "Xóa thành công!");
            } catch (Exception e) {
                DialogHelper.alert(this, "Xóa thất bại!");
            }
        }
    }
    
    public void first() {
        this.row = 0;
        this.edit();
    }

    public void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    public void next() {
        if (this.row < tbl_list.getRowCount() - 1) {
            this.row++;
            this.edit();
        }
    }

    public void last() {
        this.row = tbl_list.getRowCount() - 1;
        this.edit();
    }
    
    private void find(){
        this.fillToTable();
        this.clear();
        this.row = -1;
        this.updateStatus();
    }
    
    public void updateStatus(){
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tbl_list.getRowCount() - 1);
        // trạng thái form
        txt_idNH.setEditable(!edit);
        btn_add.setEnabled(!edit);
        btn_edit.setEnabled(edit);
        btn_delete.setEnabled(edit);
        // trạng thái điều hướng
        btn_first.setEnabled(edit && !first);
        btn_prev.setEnabled(edit && !first);
        btn_next.setEnabled(edit && !last);
        btn_last.setEnabled(edit && !last);
    }
    
    public void edit(){
        String maNH = (String) tbl_list.getValueAt(this.row, 0);
        NguoiHoc nh = dao.selectById(maNH);
        this.setForm(nh);
        setBackgroundDefault();
        tabs.setSelectedIndex(0);
        this.setPlaceHolder();
        updateStatus();
    }
    
    boolean isValidate(){
        String notification = "";
        NguoiHoc nh = dao.selectById(txt_idNH.getText());
        if(txt_idNH.getText().equalsIgnoreCase(" Mã người học")){
            notification += "Vui lòng nhập mã người học!\n";
            DesignHelper.setBackgroundFalse(txt_idNH);
        }
        else if(ValidateHelper.checkMaNH(txt_idNH) == false){
            notification += "Mã người học tối đa 7 ký tự!\n Không sử dụng ký tự đặc biệt!\n";
        }
        else if(nh != null){
            notification += "Mã người học đã tồn tại!\n";
            DesignHelper.setBackgroundFalse(txt_idNH);
        }
        
        if(txt_name.getText().equalsIgnoreCase(" Họ và tên")){
            notification += "Vui lòng nhập họ và tên!\n";
            DesignHelper.setBackgroundFalse(txt_name);
        }
        else if(ValidateHelper.checkName(txt_name) == false){
            notification += "Họ và tên phải từ 3-30 ký tự và không sử dụng số!\n";
        }
        
        if(cbo_sex.getSelectedIndex() == 0){
            notification += "Vui lòng chọn giới tính!\n";
            cbo_sex.setBackground(new Color(255,51,0));
        }
        else{
            cbo_sex.setBackground(new Color(51,255,0));
        }
        
        if(txt_birthday.getText().equalsIgnoreCase(" Ngày sinh (dd/MM/yyyy)")){
            notification += "Vui lòng nhập ngày sinh!\n";
            DesignHelper.setBackgroundFalse(txt_birthday);
        }
        else if(ValidateHelper.checkDate(txt_birthday) == false){
            notification += "Ngày sinh không hợp lệ. Vui lòng nhập đúng định dạng (dd/MM/yyyy)\n";
        }
        
        if(txt_phone.getText().equalsIgnoreCase(" Số điện thoại")){
            notification += "Vui lòng nhập số điện thoại!\n";
            DesignHelper.setBackgroundFalse(txt_phone);
        }
        else if(ValidateHelper.checkPhone(txt_phone) == false){
            notification += "Số điện thoại không hợp lệ!\n";
        }
        
        if(txt_email.getText().equalsIgnoreCase(" Email")){
            notification += "Vui lòng nhập email!\n";
            DesignHelper.setBackgroundFalse(txt_email);
        }
        else if(ValidateHelper.checkMail(txt_email) == false){
            notification += "Email không hợp lệ!\n";
        }
        
        if(txt_note.getText().equalsIgnoreCase(" Ghi chú")){
            notification += "Vui lòng nhập ghi chú!\n";
            DesignHelper.setBackgroundFalse(txt_note);
        }
        else if(ValidateHelper.checkNote(txt_note) == false){
            notification += "Ghi chú phải từ 3-255 ký tự!\n";
        }
        
        if(notification != ""){
            DialogHelper.alert(this, notification);
            return false;
        }
        else{
            setBackgroundTrue();
            return true;
        }
    }
    
    void setBackgroundTrue(){
        DesignHelper.setBackgroundTrue(txt_idNH);
        DesignHelper.setBackgroundTrue(txt_name);
        DesignHelper.setBackgroundTrue(txt_birthday);
        DesignHelper.setBackgroundTrue(txt_phone);
        DesignHelper.setBackgroundTrue(txt_email);
        DesignHelper.setBackgroundTrue(txt_note);
    }
    
    void setBackgroundDefault(){
        DesignHelper.setBackgroundDefault(txt_idNH);
        DesignHelper.setBackgroundDefault(txt_name);
        cbo_sex.setBackground(new Color(255,255,255));
        DesignHelper.setBackgroundDefault(txt_birthday);
        DesignHelper.setBackgroundDefault(txt_email);
        DesignHelper.setBackgroundDefault(txt_phone);
        DesignHelper.setBackgroundDefault(txt_note);
    }

}
